@inject IJSRuntime JS
@inject NavigationManager Navigation

@if (!tokenChecked)
{
    <text>Checking authentication...</text>
}
else
{
    <Router AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, nothing found.</p>
            </LayoutView>
        </NotFound>
    </Router>
}

@code {
    bool tokenChecked = false;
    bool isAuthorized;

    protected override async Task OnInitializedAsync()
    {
        var token = await JS.InvokeAsync<string>("sessionStorage.getItem", "access_token");
        isAuthorized = !string.IsNullOrWhiteSpace(token);

        if (!isAuthorized && !Navigation.Uri.Contains("/login"))
        {
            Navigation.NavigateTo("/login", true);
            return; // prevent further render
        }

        tokenChecked = true;
        StateHasChanged(); // re-render with router
    }
}
