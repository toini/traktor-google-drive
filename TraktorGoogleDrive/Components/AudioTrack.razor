@namespace TraktorGoogleDrive.Components
@inject IJSRuntime JS

<div style="margin-bottom: 0.5rem;">
    <b>@Name</b>
</div>

<div id="@WaveformId" style="width: 100%; height: 128px; margin-bottom: 1em;"></div>
<button @onclick="PlayPause">▶️ Play/Pause</button>

@code {
    [Parameter] public string? Id { get; set; }
    [Parameter] public string? Name { get; set; }
    [Parameter] public string? MimeType { get; set; }
    [Parameter] public string? Token { get; set; }
    [Parameter] public string? PeaksUrl { get; set; }
    [Parameter] public int? Duration { get; set; }

    string WaveformId = $"waveform_{Guid.NewGuid():N}";
    IJSObjectReference? waveSurferInstance;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine($"[AudioTrack] OnAfterRenderAsync"); 
        if (firstRender)
        {
            var wavUrl = $"/api/proxy/drive/{Id}?token={Token}";
            Console.WriteLine($"[AudioTrack] Name={Name}, Id={Id}, Token={(Token != null ? Token.Substring(0, 8) + "..." : "null")}, PeaksUrl={PeaksUrl}, Duration={Duration}, wavUrl={wavUrl}");
            // Pass Duration and PeaksUrl directly, allowing nulls
            waveSurferInstance = await JS.InvokeAsync<IJSObjectReference>(
                "initWaveSurfer", WaveformId, wavUrl, PeaksUrl, Duration);
        }
    }

    async Task PlayPause()
    {
        if (waveSurferInstance != null)
        {
            await JS.InvokeVoidAsync("waveSurferPlayPause", waveSurferInstance);
        }
    }
}
